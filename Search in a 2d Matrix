
Method 1:


class Solution {
public:
    bool searchMatrix(vector<vector<int>>& matrix, int target) {
        int i=0;
        int n=matrix.size();
        int j=matrix[0].size()-1;
        while(i<n && j>=0){
            if(target==matrix[i][j]){
                return true;
            }
           else if(matrix[i][j]>target){
                    j--;
                }
                else{
                    i++;
                }
            }
        return false;
    }
};

Method 2:

class Solution {
public:
    bool searchMatrix(vector<vector<int>>& matrix, int target) {
        int n=matrix.size();
        int m=matrix[0].size();
        int lo=0;
        int hi=m*n-1;
        while(lo<=hi){
       int mid=(lo+hi)/2;
        if(matrix[mid/m][mid%m]==target){
            return true;
        }
        else if(matrix[mid/m][mid%m]>target){
            hi=mid-1;
        }
            else{
                lo=mid+1;
            }
        }
        return false;
    }
};
